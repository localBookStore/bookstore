plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.webservice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.2'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    // HATEOAS 추가 : RESTFul API 개발에 편의성 제공하는 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    // 스프링 시큐리티 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    // OAuth2.0 Client 라이브러리 추가
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // jwt 러이브러리 추가
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.10.3'
    // 이메일 인증 : 위한 이메일 관련 객체 사용
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // Redis 추가 : Refresh 토큰 관리를 DB 대신 캐시 메모리에서 관리하기 위함
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    /*
    다른 서버로 request를 보내 response 받아 데이터를 처리해야 할 때 HttpClient를 이용.
    (HttpGet, HttpHead, HttpPost, HttpPut, HttpDelete, HttpTrace, HttpOption)
    */
    implementation 'org.apache.httpcomponents:httpclient'
    // HttpClient의 Multipart 설정을 위한 라이브러리 설정
    implementation 'org.apache.httpcomponents:httpmime'

    // compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.4")
    compile("com.querydsl:querydsl-core") // querydsl
    compile("com.querydsl:querydsl-jpa") // querydsl
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // 썸네일 이미지 원하는 사이즈 조정 가능
    compile group: 'net.coobird', name : 'thumbnailator', version: '0.4.12'

    // 설정 파일(.properties 파일) 암호화
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.0'

}

def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}

test {
    useJUnitPlatform()
}
